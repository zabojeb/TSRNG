import { useEffect, useMemo, useState, type ReactNode } from "react";
import { fetchRounds, type RoundSummary } from "../api/tsrng";
import pipelineImg from "../assets/pipeline_placeholder.svg";
import merkleImg from "../assets/merkle_placeholder.svg";
import sourcesImg from "../assets/sources_placeholder.svg";

const stageLabels: Record<string, string> = {
  committed: "–°–æ–±—Ä–∞–Ω–Ω—ã–µ –ª–∏—Å—Ç—å—è",
  beaconed: "Beacon —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω",
  finalized: "–†–∞—É–Ω–¥ –∑–∞–≤–µ—Ä—à—ë–Ω",
};

const stageDescriptions: Record<string, string> = {
  committed: "–ü–∞–∫–µ—Ç—ã —ç–Ω—Ç—Ä–æ–ø–∏–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ, Merkle-–¥–µ—Ä–µ–≤–æ –º–æ–∂–Ω–æ –ø–µ—Ä–µ—Å—á–∏—Ç–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ.",
  beaconed: "Beacon –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω, VDF —Ä–∞—Å—Å—á–∏—Ç–∞–Ω. –ì–æ—Ç–æ–≤–∏–º—Å—è –∫ –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –æ—Ç–±–æ—Ä—É –ª–∏—Å—Ç—å–µ–≤.",
  finalized:
    "–§–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω, –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã, –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∏ –º–∏–ª–ª–∏–æ–Ω –±–∏—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏ –∞—É–¥–∏—Ç–∞.",
};

const trustPillars = [
  {
    icon: "üß≠",
    title: "–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–π –ø—É—Ç—å –¥–∞–Ω–Ω—ã—Ö",
    description:
      "–ö–∞–∂–¥—ã–π —à–∞–≥ ‚Äî –æ—Ç —Å–±–æ—Ä–∞ —ç–Ω—Ç—Ä–æ–ø–∏–∏ –¥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ‚Äî —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ manifest.json –∏ –¥–æ—Å—Ç—É–ø–µ–Ω –≤ API –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.",
  },
  {
    icon: "ü™™",
    title: "–ö—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –¥–æ–∫–∞–∑—É–µ–º–æ—Å—Ç—å",
    description:
      "Merkle-–¥–µ—Ä–µ–≤—å—è, VDF –∏ HKDF –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—Ç, —á—Ç–æ –Ω–∏ –æ–¥–∏–Ω –±–∏—Ç –Ω–µ–ª—å–∑—è –ø–æ–¥–º–µ–Ω–∏—Ç—å, –Ω–µ –æ—Å—Ç–∞–≤–∏–≤ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π —Å–ª–µ–¥.",
  },
  {
    icon: "üìä",
    title: "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∞—É–¥–∏—Ç",
    description:
      "–ò—Å—Ç–æ—Ä–∏—è –∞–Ω–∞–ª–∏–∑–æ–≤, —ç–∫—Å–ø–æ—Ä—Ç 1 000 000 –±–∏—Ç –∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å —ç—Ç–∞–ª–æ–Ω–∞–º–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É NIST STS –∏ Dieharder.",
  },
];

function Step({ title, description, number }: { title: string; description: string; number: number }) {
  return (
    <div className="relative flex flex-col gap-3 rounded-3xl border border-slate-200 bg-gradient-to-br from-white via-brand-light/60 to-white p-6 shadow-lg">
      <span className="absolute -top-6 left-6 flex h-12 w-12 items-center justify-center rounded-full bg-brand-yellow text-xl font-semibold text-brand-dark shadow-lg">
        {number}
      </span>
      <h3 className="mt-6 text-xl font-semibold text-brand-dark">{title}</h3>
      <p className="text-sm text-slate-600">{description}</p>
    </div>
  );
}

function HowItWorksPage() {
  const [latestRound, setLatestRound] = useState<RoundSummary | null>(null);
  const [roundCount, setRoundCount] = useState(0);
  const [loadingStats, setLoadingStats] = useState(true);
  const [statsError, setStatsError] = useState<string | null>(null);

  useEffect(() => {
    async function load() {
      try {
        setLoadingStats(true);
        setStatsError(null);
        const items = await fetchRounds(200);
        setRoundCount(items.length);
        setLatestRound(items[0] ?? null);
      } catch (err: any) {
        setStatsError(err?.message || "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∞—É–Ω–¥–æ–≤.");
      } finally {
        setLoadingStats(false);
      }
    }
    load();
  }, []);

  const streamsCount = useMemo(
    () => (latestRound?.streams ? Object.keys(latestRound.streams).length : 0),
    [latestRound],
  );

  const stageLabel = latestRound ? stageLabels[latestRound.stage] || latestRound.stage : "‚Äî";
  const stageNarrative = latestRound ? stageDescriptions[latestRound.stage] || "" : "";
  const latestBits = latestRound?.output_bits ? latestRound.output_bits.toLocaleString() : "‚Äî";
  const latestRoundLabel =
    latestRound?.round_label || (latestRound?.round_id ? `–†–∞—É–Ω–¥ ${latestRound.round_id.slice(0, 6)}` : "‚Äî");

  return (
    <section className="page-container space-y-12">
      <header className="space-y-4 text-center">
        <h1 className="text-3xl font-semibold text-brand-dark md:text-4xl">
          –ö–∞–∫ RandomTrust –¥–µ–ª–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å –ø–æ–Ω—è—Ç–Ω–æ–π
        </h1>
        <p className="text-slate-600 md:text-lg">
          –ú—ã –Ω–µ –ø—Ä–æ—Å–∏–º –≤–µ—Ä–∏—Ç—å –Ω–∞ —Å–ª–æ–≤–æ ‚Äî –º—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Ç—å –∫–∞–∂–¥–æ–≥–æ –±–∏—Ç–∞. –û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∂–∏–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π, –∫–ª—é—á–µ–≤—ã–º–∏
          –ø—Ä–∏–Ω—Ü–∏–ø–∞–º–∏ –∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π –∫–æ–Ω–≤–µ–π–µ—Ä–∞.
        </p>
      </header>

      {statsError && <p className="text-center text-sm text-red-500">{statsError}</p>}

      <div className="grid gap-4 md:grid-cols-2 xl:grid-cols-4">
        <StoryStat
          icon="üéØ"
          label="–ü—Ä–æ–≤–µ–¥–µ–Ω–æ —Ä–∞—É–Ω–¥–æ–≤"
          value={loadingStats ? "‚Ä¶" : roundCount.toLocaleString()}
          caption="–ö–∞–∂–¥—ã–π —Ä–∞—É–Ω–¥ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞–º–∏ –∏ –∞–Ω–∞–ª–∏–∑–æ–º."
          loading={loadingStats}
        />
        <StoryStat
          icon="üõ∞Ô∏è"
          label="–°—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Ä–∞—É–Ω–¥–∞"
          value={loadingStats ? "‚Ä¶" : stageLabel}
          caption={stageNarrative || "–ò—Å—Ç–æ—Ä–∏—è —ç—Ç–∞–ø–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—É–Ω–¥–æ–≤¬ª."}
          loading={loadingStats}
        />
        <StoryStat
          icon="üîó"
          label="–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –ø–æ—Ç–æ–∫–æ–≤ —ç–Ω—Ç—Ä–æ–ø–∏–∏"
          value={loadingStats ? "‚Ä¶" : streamsCount.toString()}
          caption="–§–∏–∑–∏—á–µ—Å–∫–∏–µ, —Å–µ—Ç–µ–≤—ã–µ –∏ –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–∏–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ."
          loading={loadingStats}
        />
        <StoryStat
          icon="üì¶"
          label="–†–∞–∑–º–µ—Ä –∏—Ç–æ–≥–æ–≤–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
          value={loadingStats ? "‚Ä¶" : `${latestBits} –±–∏—Ç`}
          caption="–ì–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏–∑ 1 000 000 –±–∏—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ output.txt."
          loading={loadingStats}
        />
      </div>

      <div className="grid gap-6 lg:grid-cols-[2fr,1fr]">
        <div className="rounded-3xl border border-slate-200 bg-white p-6 shadow-sm">
          <h2 className="text-lg font-semibold text-brand-dark">–¢—Ä–∏ —Å—Ç–æ–ª–ø–∞ –¥–æ–≤–µ—Ä–∏—è RandomTrust</h2>
          <p className="mt-2 text-sm text-slate-600">
            –ù–∞—à –∫–æ–Ω–≤–µ–π–µ—Ä —Å–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω —Ç–∞–∫, —á—Ç–æ–±—ã –ª—é–±–æ–π —É—á–∞—Å—Ç–Ω–∏–∫ ‚Äî –æ–ø–µ—Ä–∞—Ç–æ—Ä, –∞—É–¥–∏—Ç–æ—Ä –∏–ª–∏ —Ä–µ–≥—É–ª—è—Ç–æ—Ä ‚Äî –º–æ–≥ –ø–æ–ª—É—á–∏—Ç—å
            –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –±–µ–∑ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤.
          </p>
          <div className="mt-6 grid gap-4 md:grid-cols-3">
            {trustPillars.map((pillar) => (
              <StoryPillar key={pillar.title} icon={pillar.icon} title={pillar.title} description={pillar.description} />
            ))}
          </div>
        </div>

        <VideoTeaser
          loading={loadingStats}
          latestRoundLabel={latestRoundLabel}
          stageLabel={stageLabel}
          stageNarrative={stageNarrative}
        />
      </div>

      <div className="grid gap-12 md:grid-cols-2">
        <div className="flex flex-col gap-6">
          <img src={sourcesImg} alt="–ö–∞–Ω–∞–ª—ã —ç–Ω—Ç—Ä–æ–ø–∏–∏" className="w-full rounded-3xl border border-slate-200 shadow" />
          <Step
            number={1}
            title="–°–±–æ—Ä –∏ —Ñ–∏–∫—Å–∞—Ü–∏—è —ç–Ω—Ç—Ä–æ–ø–∏–∏"
            description="–ú–∞—è–∫–∏ (drand, NIST), —Ä—ã–Ω–æ—á–Ω—ã–µ –∫–æ—Ç–∏—Ä–æ–≤–∫–∏, –ø–æ–≥–æ–¥–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ. –ö–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç —Ö—ç—à–∏—Ä—É–µ—Ç—Å—è SHA3-512, —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤–º–µ—Å—Ç–µ —Å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–º–∏ –∏ –ø—É–±–ª–∏–∫—É–µ—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç–∏."
          />
          <Step
            number={2}
            title="Commit: Merkle-–¥–µ—Ä–µ–≤–æ"
            description="–í—Å–µ –ª–∏—Å—Ç—å—è –æ–±—ä–µ–¥–∏–Ω—è—é—Ç—Å—è –≤ Merkle-–¥–µ—Ä–µ–≤–æ (TSRNG/commit). –ö–æ—Ä–µ–Ω—å –∏ –∏–Ω–¥–µ–∫—Å –ø–æ—Ç–æ–∫–æ–≤ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è –≤ manifest.json. –í–Ω–µ—à–Ω–∏–π —Å–∏–¥ –µ—â—ë –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω ‚Äî —Ä–µ–ø–ª–∏–∫–∞—Ü–∏—è —à–∞–≥–∞ –≤–æ–∑–º–æ–∂–Ω–∞ –ª—é–±—ã–º –∞—É–¥–∏—Ç–æ—Ä–æ–º."
          />
          <Step
            number={3}
            title="Beacon + VDF"
            description="–û–ø–µ—Ä–∞—Ç–æ—Ä –ø—É–±–ª–∏–∫—É–µ—Ç seed (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ drand). –ò–∑ –Ω–µ–≥–æ –≤—ã–≤–æ–¥–∏—Ç—Å—è –ø—Ä–æ—Å—Ç–æ–µ —á–∏—Å–ª–æ, –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è VDF (SLOTH). –†–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ vdf/proof.json. –õ—é–±–æ–π –∂–µ–ª–∞—é—â–∏–π –º–æ–∂–µ—Ç –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –≤—ã—á–∏—Å–ª–µ–Ω–∏—è."
          />
          <Step
            number={4}
            title="Finalize –∏ –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–±–æ—Ä"
            description="–ö–æ—Ä–µ–Ω—å Merkle –∏ —Å–∏–¥ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞ –ª–∏—Å—Ç—å–µ–≤. –ë–∏—Ç—ã –∞–≥—Ä–µ–≥–∏—Ä—É—é—Ç—Å—è, –ø—Ä–æ—Ö–æ–¥—è—Ç —á–µ—Ä–µ–∑ HKDF –∏ –æ–±—Ä–∞–∑—É—é—Ç —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –ø–æ—Ç–æ–∫. –ì–æ—Ç–æ–≤—è—Ç—Å—è proofs, –∞—Ä—Ö–∏–≤ –∏ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏–∑ 1 000 000 –±–∏—Ç."
          />
          <Step
            number={5}
            title="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ heavy tests"
            description="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è –±–∞–∑–æ–≤—ã–µ —Ç–µ—Å—Ç—ã (monobit, runs, –±–ª–æ–∫–∏, –±–∞–π—Ç—ã). –ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–æ–∂–Ω–æ –∏–Ω–∏—Ü–∏–∏—Ä–æ–≤–∞—Ç—å Dieharder/TestU01. –ö–∞–∂–¥—ã–π –∑–∞–ø—É—Å–∫ —Ñ–∏–∫—Å–∏—Ä—É–µ—Ç—Å—è –≤ –∏—Å—Ç–æ—Ä–∏–∏, –æ—Ç—á—ë—Ç—ã –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ API."
          />
        </div>
        <div className="flex flex-col gap-6">
          <div className="gradient-card">
            <h2 className="text-lg font-semibold text-brand-dark">–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω–≤–µ–π–µ—Ä–∞</h2>
            <div className="mt-6 space-y-6">
              <div className="flex flex-col gap-4 md:flex-row md:items-center md:gap-6">
                <div className="flex flex-1 items-center justify-center gap-4">
                  {["Entropy", "Commit", "Beacon", "Finalize", "Range"].map((label, idx) => (
                    <div key={label} className="flex flex-col items-center text-xs font-semibold text-slate-500">
                      <div className="h-10 w-10 rounded-full border border-brand-yellow/60 bg-brand-yellow/20 text-brand-dark shadow">
                        <div className="flex h-full w-full items-center justify-center">{idx + 1}</div>
                      </div>
                      <span className="mt-1 uppercase tracking-wide">{label}</span>
                    </div>
                  ))}
                </div>
              </div>
              <p className="text-sm text-slate-600">
                –í–∏–∑—É–∞–ª—å–Ω–∞—è –ª–µ–Ω—Ç–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ ¬´–ì–µ–Ω–µ—Ä–∞—Ü–∏—è¬ª –ø–æ–¥—Å–≤–µ—á–∏–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å pipeline ‚Äî —É–¥–æ–±–Ω–æ –¥–ª—è
                –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–π –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –æ—Ç—á—ë—Ç–æ–≤.
              </p>
            </div>
            <img src={pipelineImg} alt="–û–±–∑–æ—Ä –∫–æ–Ω–≤–µ–π–µ—Ä–∞" className="mt-6 w-full rounded-3xl border border-slate-200 shadow" />
          </div>
          <div className="rounded-3xl bg-brand-dark/95 p-6 text-brand-light shadow-lg">
            <h2 className="text-lg font-semibold text-brand-yellow">–ö–ª—é—á–µ–≤—ã–µ —Å—Å—ã–ª–∫–∏ API</h2>
            <ul className="mt-4 space-y-2 text-sm">
              <li>
                <code>/rounds/&lt;id&gt;/manifest</code> ‚Äî –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–∞—É–Ω–¥–∞, –≤–∫–ª—é—á–∞—è –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã VDF.
              </li>
              <li>
                <code>/rounds/&lt;id&gt;/raw/summary</code> ‚Äî —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ —Ö—ç—à–∏.
              </li>
              <li>
                <code>/rounds/&lt;id&gt;/output.txt</code> ‚Äî 1 000 000 –±–∏—Ç –¥–ª—è –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
              </li>
              <li>
                <code>/rounds/&lt;id&gt;/analysis/history</code> ‚Äî –∂—É—Ä–Ω–∞–ª –≤—Å–µ—Ö –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫.
              </li>
            </ul>
          </div>
          <div className="gradient-card space-y-6">
            <h2 className="text-lg font-semibold text-brand-dark">–î–ª—è —Ä–µ–≥—É–ª—è—Ç–æ—Ä–æ–≤ –∏ –∞—É–¥–∏—Ç–æ—Ä–æ–≤</h2>
            <p className="mt-3 text-sm text-slate-600">
              –ü–æ–ª–Ω—ã–π –ø–∞–∫–µ—Ç (artifact.zip) —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—ã–±–æ—Ä–∫—É –ª–∏—Å—Ç—å–µ–≤, –¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞, seed –∏ VDF, –∞ —Ç–∞–∫–∂–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
              —Å –±–∏—Ç–∞–º–∏. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å TestU01/NIST STS –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω—è—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—è –Ω–∞—à —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –∏ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
              –ø–∞—Ä–∞–º–µ—Ç—Ä—ã. –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –ø—É–±–ª–∏—á–Ω—ã–º API –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
            </p>
            <img src={merkleImg} alt="Merkle proof" className="w-full rounded-3xl border border-slate-200 shadow" />
          </div>
        </div>
      </div>
    </section>
  );
}

type StoryStatProps = {
  icon?: string;
  label: string;
  value: ReactNode;
  caption?: ReactNode;
  loading?: boolean;
};

function StoryStat({ icon, label, value, caption, loading }: StoryStatProps) {
  return (
    <div
      className={`rounded-3xl border border-slate-200 bg-white p-6 shadow-sm transition ${
        loading ? "animate-pulse" : ""
      }`}
    >
      <div className="flex items-center gap-3 text-sm font-semibold uppercase tracking-wide text-slate-500">
        {icon && (
          <span className="flex h-9 w-9 items-center justify-center rounded-full bg-brand-light/80 text-lg text-brand-dark shadow">
            {icon}
          </span>
        )}
        {label}
      </div>
      <div className="mt-3 text-2xl font-semibold text-brand-dark">{value}</div>
      {caption && <p className="mt-2 text-xs text-slate-500">{caption}</p>}
    </div>
  );
}

type StoryPillarProps = {
  icon: string;
  title: string;
  description: string;
};

function StoryPillar({ icon, title, description }: StoryPillarProps) {
  return (
    <div className="flex flex-col gap-2 rounded-2xl border border-slate-100 bg-brand-light/50 p-4 text-sm text-slate-600 shadow-sm">
      <span className="text-2xl">{icon}</span>
      <h3 className="text-base font-semibold text-brand-dark">{title}</h3>
      <p>{description}</p>
    </div>
  );
}

type VideoTeaserProps = {
  loading: boolean;
  latestRoundLabel: string;
  stageLabel: string;
  stageNarrative: string;
};

function VideoTeaser({ loading, latestRoundLabel, stageLabel, stageNarrative }: VideoTeaserProps) {
  return (
    <div className="flex flex-col justify-between gap-4 rounded-3xl bg-brand-dark/95 p-6 text-brand-light shadow-lg">
      <div className="space-y-3">
        <h2 className="text-lg font-semibold text-brand-yellow">–í–∏–¥–µ–æ-–¥–µ–º–æ (—Å–∫–æ—Ä–æ)</h2>
        <p className="text-sm text-brand-light/90">
          –ì–æ—Ç–æ–≤–∏–º 7-–º–∏–Ω—É—Ç–Ω—ã–π —Å–∫—Ä–∏–Ω–∫–∞—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∂–µ—Ç —Ä–∞–±–æ—Ç—É —Å–∏—Å—Ç–µ–º—ã: –æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–æ —ç–∫—Å–ø–æ—Ä—Ç–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
          –∏ –∑–∞–ø—É—Å–∫–∞ Dieharder. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ä–µ–ª–∏–∑.
        </p>
        <div className="rounded-2xl border border-brand-yellow/30 bg-brand-dark/60 p-4 text-xs uppercase tracking-wide text-brand-light/80">
          <p className="text-brand-yellow">–¢–µ–∫—É—â–∏–π —Ä–∞—É–Ω–¥: {loading ? "‚Ä¶" : latestRoundLabel}</p>
          <p className="mt-1 text-brand-light">–°—Ç–∞—Ç—É—Å: {loading ? "‚Ä¶" : stageLabel}</p>
          {stageNarrative && <p className="mt-1 text-brand-light/70 normal-case">{stageNarrative}</p>}
        </div>
      </div>
      <div className="relative mt-3 flex aspect-video w-full items-center justify-center overflow-hidden rounded-2xl border border-brand-yellow/30 bg-black/40">
        <div className="absolute inset-0 bg-gradient-to-br from-brand-yellow/10 via-transparent to-brand-yellow/20" />
        <button
          type="button"
          className="flex items-center gap-2 rounded-full bg-brand-yellow px-4 py-2 text-xs font-semibold uppercase tracking-wide text-brand-dark shadow-lg transition hover:-translate-y-0.5 hover:shadow-xl"
          disabled
        >
          ‚ñ∂ –°–∫—Ä–∏–Ω–∫–∞—Å—Ç –ø–æ—è–≤–∏—Ç—Å—è –ø–æ—Å–ª–µ –∑–∞–ø–∏—Å–∏
        </button>
      </div>
    </div>
  );
}

export default HowItWorksPage;
